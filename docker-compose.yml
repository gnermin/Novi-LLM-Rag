services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: multirag
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpass
    volumes:
      - multirag_pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d multirag"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      default:
        aliases:
          - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://raguser:ragpass@db:5432/multirag}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
    
    healthcheck:
      test:
        ["CMD-SHELL",
        "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:5000/api/health').getcode()==200 else sys.exit(1)\""]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - "80:80"        # javno izla≈æemo samo Nginx (frontend)
    # nema potrebe za env ovdje, jer koristimo /api relativnu putanju

volumes:
  multirag_pgdata:
